server.port=8010
#spring.datasource.url = jdbc:postgresql://postgres:5432/
spring.datasource.url = jdbc:postgresql://localhost:5432/accounts
spring.datasource.username=postgres
spring.datasource.password=postgres

#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.properties.hibernate.show_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring:
    application:
        name: IdentityProvider

spring.kafka.bootstrap-servers=localhost:9092 # ????? ? ???? Kafka ???????
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=my-group
# App Properties
app:
  jwt:
        # Signing key for HS512 algorithm
        # In http://www.allkeysgenerator.com/ you can generate all kinds of keys
        secret: v9y$B&E)H@MbQeThWmZq4t7w!z%C*F-JaNdRfUjXn2r5u8x/A?D(G+KbPeShVkYp
        expiration:
            minutes: 10
  cors:
        allowed-origins: http://localhost:8080
#        allowed-origins: http://localhost:3000



logging:
    level:
        org.springframework.security: DEBUG
        # org.hibernate.SQL: DEBUG

